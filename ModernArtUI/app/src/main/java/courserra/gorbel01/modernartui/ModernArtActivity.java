package courserra.gorbel01.modernartui;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.app.DialogFragment;

import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.drawable.ColorDrawable;
import android.net.Uri;
import android.os.Bundle;
import android.view.ContextThemeWrapper;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import android.widget.Toast;


public class ModernArtActivity extends Activity {

    static private final String URL = "https://developer.android.com/reference/android/content/Intent.html";
    static private final String CHOOSER_TEXT = "Load " + URL + " with:";

    private RelativeLayout mainLayout;

    private SeekBar colorSlider;

    private TextView orangeRectangle;
    private int orangeColor;

    private TextView greyRectangle;

    private TextView purpleRectangle;
    private int purpleColor;

    private TextView leftWhiteRectangle;

    private TextView redRectangle;
    private int redColor;

    private TextView rightWhiteRectangle;

    private TextView blueRectangle;
    private int blueColor;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mainLayout = (RelativeLayout) findViewById(R.id.rootLayout);

        orangeRectangle = (TextView) findViewById(R.id.orangeRectangle);
        orangeColor = getColorValue(orangeRectangle);

        greyRectangle = (TextView) findViewById(R.id.greyRectangle);

        purpleRectangle = (TextView) findViewById(R.id.purpleRectangle);
        purpleColor = getColorValue(purpleRectangle);

        leftWhiteRectangle = (TextView) findViewById(R.id.leftWhiteRectangle);

        redRectangle = (TextView) findViewById(R.id.redRectangle);
        redColor = getColorValue(redRectangle);

        rightWhiteRectangle = (TextView) findViewById(R.id.rightWhiteRectangle);

        blueRectangle = (TextView) findViewById(R.id.blueRectangle);
        blueColor = getColorValue(blueRectangle);

        colorSlider = (SeekBar) findViewById(R.id.colorSlider);
        colorSlider.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                Integer hexNumToAdd = progress + (progress / 2); //1.5 Times
                updateColors(hexNumToAdd);
            }

            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {

            }

            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {

            }
        });
    }

    /**
     * Updates the colours with the assistance of a few helper methods
     * @param value The value generated by the progress bar
     */
    private void updateColors(int value) {
        updateDrawable(orangeColor, value, orangeRectangle);
        updateDrawable(purpleColor, value, purpleRectangle);
        updateDrawable(redColor, value, redRectangle);
        updateDrawable(blueColor, value, blueRectangle);
    }

    /**
     * Update the drawable associated with a given text view with a new colour
     * @param initialValue The initial value of the given textview defined in the fields (not the nicest solution)
     * @param change The amount to change the current color as determined by the progressbar
     * @param textView The text view to change
     */
    private void updateDrawable(int initialValue, int change, TextView textView) {
        ((ColorDrawable)textView.getBackground()).setColor((initialValue - change));
    }

    /**
     * Helper method to set the initial color value for each textview
     * @param textView Textview to pass in
     * @return The colour of the drawable as an int
     */
    private int getColorValue(TextView textView) {
        return ((ColorDrawable)textView.getBackground()).getColor();
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_moreInfo) {
            DialogFragment mDialogFragment = MoreInformationDialogFragment.newInstance();
            mDialogFragment.show(getFragmentManager(), "Alert");
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    public static class MoreInformationDialogFragment extends DialogFragment {
        public static MoreInformationDialogFragment newInstance() {
            return new MoreInformationDialogFragment();
        }

        public Dialog onCreateDialog(Bundle savedInstanceState) {
                    AlertDialog.Builder builder = new AlertDialog.Builder(new ContextThemeWrapper(getActivity(), R.style.Theme_MArtDialog));
                    return builder
                    .setMessage("Would you like to learn\nabout Intents?\nThis will open a page in your browser")
                    .setCancelable(false)
                    .setPositiveButton("Yes",
                            new DialogInterface.OnClickListener() {
                                @Override
                                public void onClick(DialogInterface dialog, int which) {
                                    Intent baseIntent = new Intent(android.content.Intent.ACTION_VIEW, Uri.parse(URL));
                                    Intent chooserIntent = Intent.createChooser(baseIntent, CHOOSER_TEXT);
                                    startActivity(chooserIntent);
                                }
                            })
                    .setNegativeButton("No Thanks",
                            new DialogInterface.OnClickListener() {
                                @Override
                                public void onClick(DialogInterface dialog, int which) {
                                    Toast.makeText(getActivity(), "Resuming Activity...", Toast.LENGTH_LONG).show();
                                }
                            }).create();
        }
    }
}
